{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/src/components/VideoPlayer.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport type DPlayer from 'dplayer';\r\nimport 'dplayer/dist/DPlayer.min.css';\r\n\r\ninterface VideoPlayerProps {\r\n  initialUrl: string;\r\n  title?: string;\r\n  cover?: string;\r\n  id: string;\r\n}\r\n\r\nexport default function VideoPlayer({ initialUrl, title, cover, id }: VideoPlayerProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const playerRef = useRef<DPlayer | null>(null);\r\n  const [currentUrl, setCurrentUrl] = useState(initialUrl);\r\n\r\n  useEffect(() => {\r\n    console.log('Current Video URL:', currentUrl);\r\n    console.log('Video Title:', title);\r\n\r\n    // 初始化播放器\r\n    const initializePlayer = () => {\r\n      if (containerRef.current) {\r\n        import('dplayer').then((DPlayerModule) => {\r\n          if (playerRef.current) {\r\n            playerRef.current.destroy(); // 销毁当前播放器实例\r\n          }\r\n          const DPlayer = DPlayerModule.default;\r\n          playerRef.current = new DPlayer({\r\n            container: containerRef.current as HTMLElement,\r\n            video: {\r\n              url: currentUrl,\r\n              type: 'auto',\r\n            },\r\n            title: title,\r\n            theme: '#FADFA3',\r\n            autoplay: false,\r\n            preload: 'auto',\r\n            volume: 0.7,\r\n            playbackSpeed: [0.5, 0.75, 1, 1.25, 1.5, 2],\r\n            hotkey: true,\r\n            logo: '',\r\n            subtitle: {\r\n              url: '',\r\n              type: 'webvtt',\r\n              fontSize: '25px',\r\n              bottom: '10%',\r\n              color: '#fff',\r\n            },\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    initializePlayer();\r\n\r\n    return () => {\r\n      if (playerRef.current) {\r\n        playerRef.current.destroy();\r\n        playerRef.current = null;\r\n      }\r\n    };\r\n  }, [currentUrl, title, id]);\r\n\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen relative\">\r\n      {/* 仅在 cover 存在时显示封面图片 */}\r\n      {cover && (\r\n        <img src={cover} alt=\"封面\" className=\"absolute inset-0 w-full h-full object-cover z-0\" />\r\n      )}\r\n      <div ref={containerRef} className=\"w-full h-full z-10\"></div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;;AAae,SAAS,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAoB;IACpF,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,sBAAsB;QAClC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,SAAS;QACT,MAAM,mBAAmB;YACvB,IAAI,aAAa,OAAO,EAAE;gBACxB,4IAAkB,IAAI,CAAC,CAAC;oBACtB,IAAI,UAAU,OAAO,EAAE;wBACrB,UAAU,OAAO,CAAC,OAAO,IAAI,YAAY;oBAC3C;oBACA,MAAM,UAAU,cAAc,OAAO;oBACrC,UAAU,OAAO,GAAG,IAAI,QAAQ;wBAC9B,WAAW,aAAa,OAAO;wBAC/B,OAAO;4BACL,KAAK;4BACL,MAAM;wBACR;wBACA,OAAO;wBACP,OAAO;wBACP,UAAU;wBACV,SAAS;wBACT,QAAQ;wBACR,eAAe;4BAAC;4BAAK;4BAAM;4BAAG;4BAAM;4BAAK;yBAAE;wBAC3C,QAAQ;wBACR,MAAM;wBACN,UAAU;4BACR,KAAK;4BACL,MAAM;4BACN,UAAU;4BACV,QAAQ;4BACR,OAAO;wBACT;oBACF;gBACF;YACF;QACF;QAEA;QAEA,OAAO;YACL,IAAI,UAAU,OAAO,EAAE;gBACrB,UAAU,OAAO,CAAC,OAAO;gBACzB,UAAU,OAAO,GAAG;YACtB;QACF;IACF,GAAG;QAAC;QAAY;QAAO;KAAG;IAG1B,qBACE,8OAAC;QAAI,WAAU;;YAEZ,uBACC,8OAAC;gBAAI,KAAK;gBAAO,KAAI;gBAAK,WAAU;;;;;;0BAEtC,8OAAC;gBAAI,KAAK;gBAAc,WAAU;;;;;;;;;;;;AAGxC","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/src/components/UserAvatar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Image from 'next/image';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function UserAvatar() {\r\n  const router = useRouter();\r\n  const [userInfo, setUserInfo] = useState<{ username: string; avatar: string } | null>(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  // Fetch user information from the API\r\n  const fetchUserInfo = async () => {\r\n    try {\r\n      const response = await fetch('/api/user'); // 假设 API 路径为 /api/user\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUserInfo(data);\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user info:', error);\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserInfo(); // 组件加载时调用 API 获取用户信息\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    if (isLoggedIn) {\r\n      router.push('/userpage');\r\n    } else {\r\n      router.push('/auth/signin'); // 导向登录页面\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-[9999]\">\r\n      <div \r\n        className=\"relative w-10 h-10 rounded-full overflow-hidden border-2 border-white shadow-lg cursor-pointer\"\r\n        onClick={handleClick}\r\n        onMouseEnter={() => setShowDropdown(true)}\r\n        onMouseLeave={() => setShowDropdown(false)}\r\n      >\r\n        {userInfo ? (\r\n          <Image\r\n            src={userInfo.avatar} // 使用从 API 获取的用户头像\r\n            alt=\"用户头像\"\r\n            fill\r\n            className=\"object-cover\"\r\n          />\r\n        ) : (\r\n          <Image\r\n            src=\"/assets/images/example1.jpg\" // 默认头像\r\n            alt=\"默认头像\"\r\n            fill\r\n            className=\"object-cover\"\r\n          />\r\n        )}\r\n      </div>\r\n      {showDropdown && (\r\n        <div className=\"absolute right-0 mt-2 w-32 bg-white/10 backdrop-blur-sm rounded-lg shadow-lg p-2\">\r\n          {isLoggedIn ? (\r\n            <div className=\"text-white\">\r\n              <div className=\"font-medium\">hi, {userInfo?.username}</div>\r\n              <div className=\"text-sm text-gray-300\">点击查看个人信息</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-white\">\r\n              <div className=\"text-sm text-gray-300\">点击登录</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA+C;IACtF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,sCAAsC;IACtC,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,cAAc,uBAAuB;YAClE,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,YAAY;gBACZ,cAAc;YAChB,OAAO;gBACL,cAAc;YAChB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,cAAc;QAChB;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,iBAAiB,qBAAqB;IACxC,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,IAAI,YAAY;YACd,OAAO,IAAI,CAAC;QACd,OAAO;YACL,OAAO,IAAI,CAAC,iBAAiB,SAAS;QACxC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,cAAc,IAAM,gBAAgB;gBACpC,cAAc,IAAM,gBAAgB;0BAEnC,yBACC,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,SAAS,MAAM;oBACpB,KAAI;oBACJ,IAAI;oBACJ,WAAU;;;;;yCAGZ,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAI,8BAA8B,OAAO;;oBACzC,KAAI;oBACJ,IAAI;oBACJ,WAAU;;;;;;;;;;;YAIf,8BACC,8OAAC;gBAAI,WAAU;0BACZ,2BACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;gCAAc;gCAAK,UAAU;;;;;;;sCAC5C,8OAAC;4BAAI,WAAU;sCAAwB;;;;;;;;;;;yCAGzC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCAAwB;;;;;;;;;;;;;;;;;;;;;;AAOrD","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/src/components/EpisodeList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface Episode {\r\n  id: string;\r\n  title: string;\r\n  isLocked: boolean;\r\n}\r\n\r\ninterface PricingInfo {\r\n  singleEpisodePrice: number;      // 单集价格\r\n  memberSinglePrice: number;       // 会员单集价格\r\n  memberAllEpisodesPrice: number;  // 会员全集价格\r\n  vvvipPrice: number;             // VVVIP价格\r\n}\r\n\r\ninterface EpisodeListProps {\r\n  updateVideoUrl: (url: string) => void;\r\n  id: string;\r\n}\r\n\r\n// 定义 PaymentOptionsProps 接口\r\ninterface PaymentOptionsProps {\r\n  onClose: () => void;\r\n  onOptionSelect: (option: number) => void;\r\n  pricing: PricingInfo;  // 添加价格信息\r\n}\r\n\r\n// 支付选项组件\r\nfunction PaymentOptions({ onClose, onOptionSelect, pricing }: PaymentOptionsProps) {\r\n  return (\r\n    <div className=\"relative z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4\">解锁选项</h2>\r\n        <div className=\"space-y-2\">\r\n          <button \r\n            onClick={() => onOptionSelect(1)} \r\n            className=\"block w-full p-3 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <span>单集解锁（扫码支付）</span>\r\n              <span className=\"font-bold\">¥{pricing.singleEpisodePrice}</span>\r\n            </div>\r\n          </button>\r\n          <button \r\n            onClick={() => onOptionSelect(2)} \r\n            className=\"block w-full p-3 bg-green-500 text-white rounded hover:bg-green-600 transition\"\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <span>单集解锁（会员特价）</span>\r\n              <span className=\"font-bold\">¥{pricing.memberSinglePrice}</span>\r\n            </div>\r\n          </button>\r\n          <button \r\n            onClick={() => onOptionSelect(3)} \r\n            className=\"block w-full p-3 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition\"\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <span>全集解锁（会员特价）</span>\r\n              <span className=\"font-bold\">¥{pricing.memberAllEpisodesPrice}</span>\r\n            </div>\r\n          </button>\r\n          <button \r\n            onClick={() => onOptionSelect(4)} \r\n            className=\"block w-full p-3 bg-red-500 text-white rounded hover:bg-red-600 transition\"\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <span>VVVIP限时全场任意看</span>\r\n              <span className=\"font-bold\">¥{pricing.vvvipPrice}</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <button \r\n          onClick={onClose} \r\n          className=\"block w-full p-3 bg-gray-500 text-white rounded mt-4 hover:bg-gray-600 transition\"\r\n        >\r\n          取消\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function EpisodeList({ updateVideoUrl, id }: EpisodeListProps) {\r\n  const router = useRouter();\r\n  const [isExpanded, setIsExpanded] = useState(true); // 控制选集列表的展开和收起状态\r\n  const [episodes, setEpisodes] = useState<Episode[]>([]); // 存储剧集信息\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 用户登录状态\r\n  const [showPaymentOptions, setShowPaymentOptions] = useState(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; id: string } | null>(null);\r\n  const [selectedEpisode, setSelectedEpisode] = useState<Episode | null>(null); // 允许为 null\r\n  const [pricing, setPricing] = useState<PricingInfo | null>(null);\r\n\r\n  // 获取用户登录状态和剧集信息\r\n  const fetchUserStatusAndEpisodes = async () => {\r\n    try {\r\n      const userResponse = await fetch('/api/user'); // 请求用户信息\r\n      if (userResponse.ok) {\r\n        const userData = await userResponse.json();\r\n        setIsLoggedIn(true); // 设置用户为已登录\r\n        setUserInfo(userData);\r\n        // 根据用户信息获取剧集权限\r\n        const episodesResponse = await fetch(`/api/videos/${id}/user-episodes?userId=${userData.id}`);\r\n        console.log(userData);\r\n        if (episodesResponse.ok) {\r\n          const userEpisodes = await episodesResponse.json();\r\n          setEpisodes(userEpisodes); // 设置用户可访问的剧集\r\n        } else {\r\n          console.error('Failed to fetch user episodes');\r\n        }\r\n      } else {\r\n        setIsLoggedIn(false); // 设置用户为未登录\r\n        fetchEpisodes(); // 未登录时获取所有剧集\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user status:', error);\r\n      setIsLoggedIn(false); // 设置用户为未登录\r\n      fetchEpisodes(); // 未登录时获取所有剧集\r\n    }\r\n  };\r\n\r\n  // 获取所有剧集信息\r\n  const fetchEpisodes = async () => {\r\n    try {\r\n      const response = await fetch(`/api/videos/${id}/user-episodes`); // 请求所有剧集信息\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEpisodes(data); // 设置所有剧集\r\n      } else {\r\n        console.error('Failed to fetch episodes');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching episodes:', error);\r\n    }\r\n  };\r\n\r\n  // 添加获取价格信息的函数\r\n  const fetchPricingInfo = async () => {\r\n    try {\r\n      const response = await fetch(`/api/videos/${id}/pricing`);\r\n      if (response.ok) {\r\n        const pricingData = await response.json();\r\n        setPricing(pricingData);\r\n      } else {\r\n        console.error('获取价格信息失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取价格信息时发生错误:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserStatusAndEpisodes();\r\n    fetchPricingInfo();\r\n  }, [id]);\r\n\r\n  // 处理剧集点击事件\r\n  const handleEpisodeClick = (episode: Episode) => {\r\n    if (episode.isLocked) {\r\n      setShowPaymentOptions(true);\r\n      setSelectedEpisode(episode);\r\n    } else {\r\n      const newUrl = `/${id}/${episode.id}`;\r\n      router.push(newUrl);\r\n    }\r\n  };\r\n\r\n  const handlePaymentOptionSelect = async (option: number) => {\r\n    if (!pricing) {\r\n      console.error('价格信息未加载');\r\n      return;\r\n    }\r\n\r\n    setShowPaymentOptions(false);\r\n    \r\n    switch (option) {\r\n      case 1: // 单集解锁（扫码支付）\r\n        if (isLoggedIn && userInfo && selectedEpisode) {\r\n          const response = await fetch('/api/payment/scan', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \r\n              userId: userInfo.id, \r\n              episodeId: selectedEpisode.id,\r\n              price: pricing.singleEpisodePrice \r\n            }),\r\n          });\r\n          \r\n          if (response.ok) {\r\n            console.log('支付成功，剧集已解锁');\r\n          } else {\r\n            console.error('支付失败');\r\n          }\r\n        } else if (selectedEpisode) {\r\n          // 未注册用户扫码支付，进行临时注册\r\n          const tempUserResponse = await fetch('/api/register/temp', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \r\n              episodeId: selectedEpisode.id,\r\n              price: pricing.singleEpisodePrice \r\n            }),\r\n          });\r\n\r\n          if (tempUserResponse.ok) {\r\n            const tempUserData = await tempUserResponse.json();\r\n            console.log('临时用户注册成功');\r\n          } else {\r\n            console.error('临时注册失败');\r\n          }\r\n        }\r\n        break;\r\n      case 2: // 单集解锁（余额支付）\r\n        if (isLoggedIn && userInfo && selectedEpisode) {\r\n          const response = await fetch('/api/payment/balance', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \r\n              userId: userInfo.id, \r\n              episodeId: selectedEpisode.id,\r\n              price: pricing.memberSinglePrice \r\n            }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            console.log('支付成功，剧集已解锁');\r\n          } else {\r\n            const errorData = await response.json();\r\n            if (errorData.message === '余额不足') {\r\n              alert('余额不足，请充值');\r\n            } else {\r\n              console.error('支付失败');\r\n            }\r\n          }\r\n        } else {\r\n          // 未注册用户跳转到注册界面\r\n          router.push('/auth/signup');\r\n        }\r\n        break;\r\n      case 3: // 执行全集解锁逻辑\r\n        if (isLoggedIn && userInfo && selectedEpisode) {\r\n          const response = await fetch('/api/payment/balance/all', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: userInfo.id, videoId: id }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            console.log('所有剧集已解锁');\r\n          } else {\r\n            const errorData = await response.json();\r\n            if (errorData.message === '余额不足') {\r\n              alert('余额不足，请充值');\r\n            } else {\r\n              console.error('支付失败');\r\n            }\r\n          }\r\n        } else {\r\n          // 未注册用户跳转到注册界面\r\n          router.push('/auth/signup');\r\n        }\r\n        break;\r\n      case 4: // VVVIP逻辑\r\n        if (isLoggedIn && userInfo && selectedEpisode) {\r\n          const response = await fetch('/api/payment/vvvip', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: userInfo.id }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            console.log('VVVIP访问权限已授予');\r\n            // 这里可以设置一个定时器，过一段时间后撤销权限\r\n            setTimeout(async () => {\r\n              await fetch('/api/payment/revoke-vvvip', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ userId: userInfo.id }),\r\n              });\r\n            }, 3600000); // 例如，1小时后撤销权限\r\n          } else {\r\n            const errorData = await response.json();\r\n            if (errorData.message === '余额不足') {\r\n              alert('余额不足，请充值');\r\n            } else {\r\n              console.error('支付失败');\r\n            }\r\n          }\r\n        } else {\r\n          // 未注册用户跳转到注册界面\r\n          router.push('/auth/signup');\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed right-4 top-1/2 -translate-y-1/2 z-[9999]\">\r\n      <button\r\n        onClick={() => setIsExpanded(!isExpanded)} // 切换选集列表的展开和收起状态\r\n        className=\"w-10 h-10 rounded-full bg-white/10 backdrop-blur-sm flex items-center justify-center text-white hover:bg-white/20 transition-colors\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-6 w-6\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M4 6h16M4 12h16M4 18h16\"\r\n          />\r\n        </svg>\r\n      </button>\r\n\r\n      {isExpanded && (\r\n        <div className=\"absolute right-0 mt-2 w-64 bg-white/10 backdrop-blur-sm rounded-lg shadow-lg p-4 max-h-64 overflow-y-auto\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-bold text-white\">选集列表</h2>\r\n            <button\r\n              onClick={() => setIsExpanded(false)} // 收起选集列表\r\n              className=\"text-white hover:text-gray-300\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-5 w-5\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            {episodes.map((episode) => (\r\n              <button\r\n                key={episode.id}\r\n                onClick={() => handleEpisodeClick(episode)} // 处理剧集点击事件\r\n                className={`p-2 rounded text-center transition-colors ${\r\n                  episode.isLocked\r\n                    ? 'bg-gray-800 text-gray-400 hover:bg-gray-700' // 锁定剧集的样式\r\n                    : 'bg-white/10 text-white hover:bg-white/20' // 未锁定剧集的样式\r\n                }`}\r\n              >\r\n                <div className=\"relative\">\r\n                  {episode.title}\r\n                  {episode.isLocked && (\r\n                    <span className=\"absolute -top-1 -right-1 text-xs bg-yellow-500 text-black px-1 rounded\">\r\n                      锁定\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showPaymentOptions && pricing && (\r\n        <PaymentOptions \r\n          onClose={() => setShowPaymentOptions(false)} \r\n          onOptionSelect={handlePaymentOptionSelect}\r\n          pricing={pricing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/src/app/%5Bid%5D/%5Bep%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport VideoPlayer from '@/components/VideoPlayer';\nimport UserAvatar from '@/components/UserAvatar';\nimport EpisodeList from '@/components/EpisodeList';\nimport { useParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { api } from '@/lib/api';\n\n// Define the type for video data\ntype VideoData = {\n  title: string;\n  url: string;\n  cover: string;\n};\n\n// Function to fetch video data from the API\nasync function fetchVideoData(id: string, ep: string): Promise<{ title: string; url: string; cover: string }> {\n  try {\n    const response = await fetch(`/api/videos/${id}/episodes/${ep}`);\n    if (!response.ok) {\n      throw new Error('网络响应失败');\n    }\n    const data = await response.json();\n    console.log('Fetched data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching video data:', error);\n    throw error;\n  }\n}\n\n// Main component for the video page\nexport default function VideoPage() {\n  const params = useParams() as { id: string; ep: string }; // 使用类型断言\n\n  const { id, ep } = params; // 解构参数\n\n  console.log('ID:', id, 'EP:', ep); // 添加调试日志\n\n  // State to hold video data\n  const [videoData, setVideoData] = useState<VideoData | null>(null);\n\n  // useEffect to fetch video data when id or ep change\n  useEffect(() => {\n    console.log('useEffect triggered with ID:', id, 'EP:', ep); // 添加调试日志\n    if (id && ep) {\n      fetchVideoData(id, ep).then(data => {\n        console.log('Setting videoData:', data);\n        setVideoData(data);\n      }).catch(error => {\n        console.error('Error setting videoData:', error);\n      });\n    }\n  }, [id, ep]); // 确保依赖项数组中包含 id 和 ep\n\n  // If videoData is not yet available, show loading message\n  if (!videoData) {\n    return <div>加载中...</div>;\n  }\n\n  // Function to update video URL\n  const updateVideoUrl = (newUrl: string) => {\n    console.log('切换到新视频 URL:', newUrl);\n    // 这里可以添加逻辑来更新视频 URL\n  };\n\n  // Render the video player and other components\n  return (\n    <div className=\"fixed inset-0 bg-black overflow-hidden flex flex-col\">\n      <div className=\"absolute top-4 left-4 text-white text-2xl z-30\">\n        {videoData.title}\n      </div>\n      <div className=\"relative flex-grow flex items-center justify-center\">\n        <VideoPlayer\n          initialUrl={videoData.url}\n          title={videoData.title}\n          cover={'/assets/images/black.jpg'}\n          id={id}\n        />\n      </div>\n      <UserAvatar />\n      <EpisodeList updateVideoUrl={updateVideoUrl} id={id} />\n      {/*<style jsx>{`\n         .issue-button-class {\n          display: none !important;\n        }\n      `}</style>*/}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAgBA,4CAA4C;AAC5C,eAAe,eAAe,EAAU,EAAE,EAAU;IAClD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,YAAY,EAAE,GAAG,UAAU,EAAE,IAAI;QAC/D,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;AACF;AAGe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAmC,SAAS;IAEnE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,QAAQ,OAAO;IAElC,QAAQ,GAAG,CAAC,OAAO,IAAI,OAAO,KAAK,SAAS;IAE5C,2BAA2B;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAE7D,qDAAqD;IACrD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,gCAAgC,IAAI,OAAO,KAAK,SAAS;QACrE,IAAI,MAAM,IAAI;YACZ,eAAe,IAAI,IAAI,IAAI,CAAC,CAAA;gBAC1B,QAAQ,GAAG,CAAC,sBAAsB;gBAClC,aAAa;YACf,GAAG,KAAK,CAAC,CAAA;gBACP,QAAQ,KAAK,CAAC,4BAA4B;YAC5C;QACF;IACF,GAAG;QAAC;QAAI;KAAG,GAAG,qBAAqB;IAEnC,0DAA0D;IAC1D,IAAI,CAAC,WAAW;QACd,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,+BAA+B;IAC/B,MAAM,iBAAiB,CAAC;QACtB,QAAQ,GAAG,CAAC,eAAe;IAC3B,oBAAoB;IACtB;IAEA,+CAA+C;IAC/C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,UAAU,KAAK;;;;;;0BAElB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,iIAAA,CAAA,UAAW;oBACV,YAAY,UAAU,GAAG;oBACzB,OAAO,UAAU,KAAK;oBACtB,OAAO;oBACP,IAAI;;;;;;;;;;;0BAGR,8OAAC,gIAAA,CAAA,UAAU;;;;;0BACX,8OAAC,iIAAA,CAAA,UAAW;gBAAC,gBAAgB;gBAAgB,IAAI;;;;;;;;;;;;AAQvD","debugId":null}}]
}