{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/pages/api/auth/%5B...nextauth%5D.ts"],"sourcesContent":["import NextAuth from 'next-auth';\r\nimport CredentialsProvider from 'next-auth/providers/credentials';\r\n\r\nexport default NextAuth({\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: 'Credentials',\r\n      credentials: {\r\n        username: { label: 'Username', type: 'text' },\r\n        password: { label: 'Password', type: 'password' },\r\n      },\r\n      authorize: async (credentials) => {\r\n        if (credentials?.username === 'user' && credentials?.password === 'pass') {\r\n          return { id: '1', name: 'User' };\r\n        }\r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n  pages: {\r\n    signIn: '/auth/signin',\r\n    signOut: '/auth/signout',\r\n    error: '/auth/error',\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      session.user = {\r\n        ...session.user,\r\n        id: token.id as string,\r\n      } as any;\r\n      return session;\r\n    },\r\n  },\r\n}); "],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,iHAAA,CAAA,UAAQ,AAAD,EAAE;IACtB,WAAW;QACT,CAAA,GAAA,yKAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,WAAW,OAAO;gBAChB,IAAI,aAAa,aAAa,UAAU,aAAa,aAAa,QAAQ;oBACxE,OAAO;wBAAE,IAAI;wBAAK,MAAM;oBAAO;gBACjC;gBACA,OAAO;YACT;QACF;KACD;IACD,OAAO;QACL,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG;gBACb,GAAG,QAAQ,IAAI;gBACf,IAAI,MAAM,EAAE;YACd;YACA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/pages/api/user/update-username.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport { prisma } from '@/lib/prisma';\r\nimport { getServerSession } from 'next-auth';\r\nimport authOptions from '../auth/[...nextauth]';\r\nimport { UpdateUsernameRequest, UpdateUsernameResponse } from '@/types/user';\r\nimport { Session } from 'next-auth';\r\n\r\nexport default async function handler(\r\n  req: NextApiRequest,\r\n  res: NextApiResponse<UpdateUsernameResponse>\r\n) {\r\n  // 只允许 POST 请求\r\n  if (req.method !== 'POST') {\r\n    return res.status(405).json({\r\n      success: false,\r\n      message: '方法不允许',\r\n    });\r\n  }\r\n\r\n  try {\r\n    // 验证用户是否已登录\r\n    const session = await getServerSession(req, res, authOptions) as Session;\r\n    if (!session?.user?.id) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        message: '未登录',\r\n      });\r\n    }\r\n\r\n    const { newUsername } = req.body as UpdateUsernameRequest;\r\n\r\n    // 验证新用户名\r\n    if (!newUsername || newUsername.length < 3 || newUsername.length > 20) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '用户名长度必须在3-20个字符之间',\r\n      });\r\n    }\r\n\r\n    // 检查用户名是否已被使用\r\n    const existingUser = await prisma.user.findUnique({\r\n      where: {\r\n        username: newUsername,\r\n      },\r\n    });\r\n\r\n    if (existingUser) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '该用户名已被使用',\r\n      });\r\n    }\r\n\r\n    // 更新用户名\r\n    const updatedUser = await prisma.user.update({\r\n      where: {\r\n        id: session.user.id,\r\n      },\r\n      data: {\r\n        username: newUsername,\r\n      },\r\n      select: {\r\n        username: true,\r\n      },\r\n    });\r\n\r\n    return res.status(200).json({\r\n      success: true,\r\n      message: '用户名更新成功',\r\n      data: {\r\n        username: updatedUser.username,\r\n      },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('更新用户名失败:', error);\r\n    return res.status(500).json({\r\n      success: false,\r\n      message: '服务器错误，请稍后重试',\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAIe,eAAe,QAC5B,GAAmB,EACnB,GAA4C;IAE5C,cAAc;IACd,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,SAAS;YACT,SAAS;QACX;IACF;IAEA,IAAI;QACF,YAAY;QACZ,MAAM,UAAU,MAAM,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE,KAAK,KAAK,mIAAA,CAAA,UAAW;QAC5D,IAAI,CAAC,SAAS,MAAM,IAAI;YACtB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,SAAS;gBACT,SAAS;YACX;QACF;QAEA,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,IAAI;QAEhC,SAAS;QACT,IAAI,CAAC,eAAe,YAAY,MAAM,GAAG,KAAK,YAAY,MAAM,GAAG,IAAI;YACrE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,SAAS;gBACT,SAAS;YACX;QACF;QAEA,cAAc;QACd,MAAM,eAAe,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAChD,OAAO;gBACL,UAAU;YACZ;QACF;QAEA,IAAI,cAAc;YAChB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,SAAS;gBACT,SAAS;YACX;QACF;QAEA,QAAQ;QACR,MAAM,cAAc,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3C,OAAO;gBACL,IAAI,QAAQ,IAAI,CAAC,EAAE;YACrB;YACA,MAAM;gBACJ,UAAU;YACZ;YACA,QAAQ;gBACN,UAAU;YACZ;QACF;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,SAAS;YACT,SAAS;YACT,MAAM;gBACJ,UAAU,YAAY,QAAQ;YAChC;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,YAAY;QAC1B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAC1B,SAAS;YACT,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file://D%3A/h5video_project/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,qIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,qIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}